#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <stdint.h>

#include <@(spec.base_type.pkg_name)/@(subfolder)/@(module_name).h>
#include <rosidl_generator_c/message_type_support.h>

#include <rosidl_generator_c/string.h>
#include <rosidl_generator_c/string_functions.h>

#include <rosidl_generator_c/primitives_array.h>
#include <rosidl_generator_c/primitives_array_functions.h>

@{
struct_type_name = 'rcldotnet_{}_{}_{}_t'.format(spec.base_type.pkg_name, subfolder, type_name)
msg_typename = '%s__%s__%s' % (spec.base_type.pkg_name, subfolder, spec.base_type.type)
header_filename = "{0}/{1}/rcldotnet_{2}.h".format(package_name, subfolder, convert_camel_case_to_lower_case_underscore(type_name))
}@

#include "@(header_filename)"

void * @(spec.base_type.pkg_name)_@(type_name)__convert_from_dotnet(void * _untyped_dotnet_obj)
{
   @(struct_type_name) * _dotnet_obj = (@(struct_type_name) *)_untyped_dotnet_obj;

   @(msg_typename) * ros_message = @(msg_typename)__create();

@[for field in spec.fields]@

@[    if field.type.is_array]@
// TODO(esteve): Arrays are not supported
@[    else]@
@[        if field.type.is_primitive_type()]@
@[            if field.type.type == 'string']@
    rosidl_generator_c__String__assign(
      &ros_message->@(field.name), _dotnet_obj->@(upperfirst(field.name)));
@[            else]@
    ros_message->@(field.name) = _dotnet_obj->@(upperfirst(field.name));
@[            end if]@
@[        else]@
// TODO(esteve): Nested types are not supported
@[        end if]@
@[    end if]@
@[end for]@

   return ros_message;
}

void * native_get_from_dotnet_converter() {
  return &@(spec.base_type.pkg_name)_@(type_name)__convert_from_dotnet;
}

void * @(spec.base_type.pkg_name)_@(type_name)__convert_to_dotnet(void * _untyped_ros_message)
{
   return NULL;
}


void * native_get_to_dotnet_converter() {
  return &@(spec.base_type.pkg_name)_@(type_name)__convert_to_dotnet;
}

const void * native_get_typesupport() {
  const void * ptr = ROSIDL_GET_MSG_TYPE_SUPPORT(@(spec.base_type.pkg_name), @(spec.msg_name));
  return ptr;
}
